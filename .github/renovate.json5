{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":automergeDigest",
    ":automergeBranch",
    "github>kFlix-tv/k8s-kflix//.github/renovate/allowedVersions.json5",
    "github>kFlix-tv/k8s-kflix//.github/renovate/autoMerge.json5",
    "github>kFlix-tv/k8s-kflix//.github/renovate/commitMessage.json5",
    "github>kFlix-tv/k8s-kflix//.github/renovate/groups.json5",
    "github>kFlix-tv/k8s-kflix//.github/renovate/labels.json5",
    "github>kFlix-tv/k8s-kflix//.github/renovate/semanticCommits.json5",
    "helpers:pinGitHubActionDigests",
    "replacements:all",
    "workarounds:all",
    "group:monorepos"
  ],
  "platform": "github",
  "onboarding": false,
  "requireConfig": "optional",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "ignorePaths": ["**/archive/**"],
  "flux": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"]
  },
  "helm-values": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"]
  },
  "kubernetes": {
    "fileMatch": [
      "(^|/)\\.taskfiles/.+\\.ya?ml(\\.j2)?$",
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"
    ]
  },
  "customManagers": [
    {
      "customType": "regex",
      "description": "Process Tekton dependencies",
      "fileMatch": [
        "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"
      ],
      "matchStrings": [
        "depName=(?<depName>\\S+)?\n.*?(?<currentValue>v\\d+\\.\\d+\\.\\d+)"
      ],
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "description": "Process custom dependencies",
      "fileMatch": [
        "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
        "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"
      ],
      "matchStrings": [
        // Example: `k3s_release_version: "v1.27.3+k3s1"`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
        // Example: `- https://github.com/rancher/system-upgrade-controller/releases/download/v0.11.0/crd.yaml`
        //          `- https://github.com/argoproj/argo-cd/raw/v2.7.10/manifests/install.yaml`
        //          `- https://github.com/argoproj/argo-cd/raw/v2.7.10/manifests/ha/install.yaml`
        //          `- https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/21.1.1/kubernetes/kubernetes.yml`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?-\\s(.*?)\/(?<currentValue>(v|\\d)[^/]+)\/\\S+\n",
        // Example: apiVersion=helm.cattle.io/v1 kind=HelmChart
        "datasource=(?<datasource>\\S+)\n.*?repo: (?<registryUrl>\\S+)\n.*?chart: (?<depName>\\S+)\n.*?version: (?<currentValue>\\S+)\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "description": "Process CloudnativePG Postgresql version",
      "fileMatch": [
        "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"
      ],
      "matchStrings": [
        "imageName: (?<depName>\\S+):(?<currentValue>.*\\-.*)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "redhat"
    }
  ],
  "hostRules": [
    {
      "hostType": "docker",
      "matchHost": "ghcr.io",
      "username": "kiliantyler",
      "encrypted": {
        "password": "wcFMA/xDdHCJBTolAQ//Qt9k/gWM8PcaRIYt8KFDGsN47fTI/AN6MS9LPVhmhkmgeut01QxELl4vCgXlLpQqH3bDuhF3DLl4hNQyyMchyWJqghVvgfrMngVMWft3VUHZmTmyb+tYYgAR7t/6kPLMgFH4RyrjdXBHLGO0Ilg/RVQocCfSurq0xhYgfX0F8r53Wr7G7u+2PK497uLvLIJOPjBwe1wbJK2SGVs+aoaFBZ7SLFvyeIwxJgDhI37c6lGL2ZkeoAsTmmrAXRAkpSRPz7ry4ViX9aI8hk+rz8Sj2N8EIaCMHTXzeD8MhGOvRAsJmQzuBF0pbGnDEeYIyLGDbgQmhsi70WnNfXOw9mDeDkgz7tOBc1Quo7D/ZzO7mKpl8wQ6MFMGSHNya5mWyZw3UKbz8R1EyxfL6gyafi7haVi4SpMXt8yFvr4zzdRj4TUOQhjGVs+YcRmMI9L8qw/v8l5Td+NxNqblMP3IWDnXPPfpS8fl31myJ3V7i0tbYB0i1ydAp9OzDUzuqcCHGccbclF7xHJm3R61kmyVwErIMUyzDPOeRez7AIS5SoInGheF7nIL1IbI29imMnGpzIxROChapKkPPBEIR56mUPWgzi8IT7qFoglrjcpjlgqTUFfHprlHGkSo3QOGKIU4ManV1p9Vl+1jkLeDF0MHQO2N/ajKq0FY3m369Znyvu/9/hzSdwGPiNn+qy+ngfNS5aiBsyWx37cQ1Byeg9Jk6OvcRe+TaxQZeqYyfYQnyeaOliFKr4pZZ3PzrF4wsxaERbaUFDUTit1y2w+RyPOuj/lN3ZGjt81Eis+8w4B5rU3Nn/8SKqId1uyKyxh568iHre4DTCY3K7q6wzI2"
      }
    }
  ],
  "packageRules": [
    {
      "description": "Loose versioning for non-semver packages",
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackagePatterns": ["changedetection", "plex", "qbittorrent"],
      "assignees": ["kiliantyler"]
    },
    {
      "description": "Use custom versioning for Minio",
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$",
      "matchPackagePatterns": ["minio"],
      "assignees": ["kiliantyler"]
    }
  ],
  "pre-commit": {
    "enabled": true
  }
}
