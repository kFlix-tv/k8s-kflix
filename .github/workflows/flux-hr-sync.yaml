# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Flux Helm Repository Sync"

on:
  workflow_dispatch:
    inputs:
      helmRepoNamespace:
        description: Helm Repository Namespace
        default: flux-system
        required: true
      helmRepoName:
        description: Helm Repository Name
        required: true
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**/helmrelease.yaml"]

jobs:
  sync:
    name: Flux Helm Repository Sync
    runs-on: ["arc-runner-set-kflix"]
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        fetch-depth: 0

    - name: Setup Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Setup Workflow Tools
      shell: bash
      run: brew install fluxcd/tap/flux yq

    - name: Write kubeconfig
      id: kubeconfig
      uses: timheuer/base64-to-file@784a1a4a994315802b7d8e2084e116e783d157be # v1.2.4
      with:
        encodedString: "${{ secrets.KUBECONFIG }}"
        fileName: kubeconfig

    - name: Get Changed Files
      id: changed-files
      uses: tj-actions/changed-files@62f4729b5df35e6e0e01265fa70a82ccaf196b4b # v41.1.1
      with:
        files: kubernetes/**/helmrelease.yaml
        safe_output: false

    - name: List All Changed Files
      run: echo "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"

    - name: Sync Helm Repository
      env:
        KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
      shell: bash
      run: |
        declare -a repos=()
        for f in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            repo_namespace="$(yq -r '.spec.chart.spec.sourceRef.namespace' "${f}")"
            repo_name="$(yq -r '.spec.chart.spec.sourceRef.name' "${f}")"
            repos+=("${cluster_name}:${repo_namespace}:${repo_name}")
        done
        mapfile -t repos < <(printf "%s\n" "${repos[@]}" | sort -u)
        for r in "${repos[@]}"; do
            IFS=':' read -r cluster_name repo_namespace repo_name <<< "${r}"
            flux \
                --context ${cluster_name} \
                --namespace ${repo_namespace} \
                reconcile source helm ${repo_name}
        done

    - name: Sync Helm Repository
      env:
        KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
      shell: bash
      run: |
        flux \
            --namespace ${{ github.event.inputs.helmRepoNamespace }} \
            reconcile source helm ${{ github.event.inputs.helmRepoName }}
