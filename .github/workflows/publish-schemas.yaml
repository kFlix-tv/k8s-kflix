# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Publish Schemas"

on:
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * 0"
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-schemas.yaml"]

jobs:
  publish-schemas:
    name: Publish Schemas
    runs-on: ["arc-runner-set-kflix"]
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Setup Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Setup Workflow Tools
      shell: bash
      run: brew install kubectl

    - name: Setup Python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
      with:
        python-version: 3.x

    - name: Setup Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        node-version: 18.x

    - name: Write kubeconfig
      id: kubeconfig
      uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1
      with:
        encodedString: "${{ secrets.KUBECONFIG }}"
        fileName: kubeconfig

    - name: Download and run crd-extractor
      env:
        KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
      shell: bash
      run: |
        curl -fsSL -o $GITHUB_WORKSPACE/crd-extractor.sh \
            https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/Utilities/crd-extractor.sh
        chmod +x $GITHUB_WORKSPACE/crd-extractor.sh
        bash $GITHUB_WORKSPACE/crd-extractor.sh

    - name: Deploy to Cloudflare Pages
      uses: cloudflare/wrangler-action@7c01cc48d88a1f83b4716e0557c168854a9dcdb8 # v3.4.1
      with:
        apiToken: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
        accountId: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
        workingDirectory: /home/runner/.datree/crdSchemas
        command: pages deploy --project-name=k8s-schemas --branch main .
