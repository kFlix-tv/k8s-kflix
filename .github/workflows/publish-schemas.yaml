---
name: "Publish Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-schemas.yaml"]

jobs:
  publish-manifests:
    name: Publish Manifests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup Flux
        uses: fluxcd/flux2/action@026ab61ba7e3755d7be7dc7d2b6024c3b3992291 # v2.1.1

      - name: Setup Kube Tools
        uses: yokawasa/action-setup-kube-tools@af4ebb1af1efd30c5bd84a2e9773355ad6362a33 # v0.9.3
        with:
          setup-tools: kubectl

      - name: Setup Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.x

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup crd-extractor
        uses: robinraju/release-downloader@efa4cd07bd0195e6cc65e9e30c251b49ce4d3e51 # v1.8
        with:
          repository: datreeio/CRDs-catalog
          latest: true
          fileName: crd-extractor.zip

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@ca9e30baf83f7f26708fb0059af9a0973fe5f27e # v1.2
        with:
          encodedString: ${{ secrets.KUBECONFIG }}
          fileName: kubeconfig

      - name: Run crd-extractor
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        shell: bash
        run: |
          unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE
          bash $GITHUB_WORKSPACE/crd-extractor.sh

      - name: Repo owner to lowercase
        id: repo_owner
        shell: bash
        run: echo "repo-owner=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_OUTPUT}"

      - name: Generate tag
        id: generate-tag
        shell: bash
        run: echo "tag=ghcr.io/${{ steps.repo_owner.outputs.repo-owner }}/manifests/kubernetes-schemas:$(git rev-parse --short HEAD)" >> "${GITHUB_OUTPUT}"

      # - name: Generate tag 2
      #   id: generate-tag2
      #   shell: bash
      #   run: echo "tag2=ghcr.io/${{ steps.repo_owner.outputs.repo-owner }}/manifests/kubernetes-schemas:${{ secrets.SCHEMAS_MAJOR_VERSION }}.${{ secrets.SCHEMAS_MINOR_VERSION }}.${{ secrets.SCHEMAS_PATCH_VERSION }}" >> "${GITHUB_OUTPUT}"

      - name: Publish manifests
        shell: bash
        run: |
          flux push artifact oci://${{ steps.generate-tag.outputs.tag }} \
              --path="/home/runner/.datree/crdSchemas" \
              --source="${{ github.repositoryUrl }}" \
              --revision="${{ github.ref_name }}@sha1:$(git rev-parse HEAD)"

      - name: Tag manifests
        shell: bash
        run: flux tag artifact oci://${{ steps.generate-tag.outputs.tag }} --tag main

      # - name: Tag manifests
      #   shell: bash
      #   run: flux tag artifact oci://${{ steps.generate-tag2.outputs.tag2 }} --tag main

  publish-web:
    name: Publish Web
    runs-on: ubuntu-latest
    needs: ["publish-manifests"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup Flux
        uses: fluxcd/flux2/action@026ab61ba7e3755d7be7dc7d2b6024c3b3992291 # v2.1.1

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Repo owner to lowercase
        id: repo_owner
        shell: bash
        run: echo "repo-owner=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_OUTPUT}"

      - name: Pull manifests
        shell: bash
        run: |
          mkdir -p /home/runner/crdSchemas
          flux pull artifact oci://ghcr.io/${{ steps.repo_owner.outputs.repo-owner }}/manifests/kubernetes-schemas:$(git rev-parse --short HEAD) --output /home/runner/crdSchemas

      - name: Write nginx-unprivileged Dockerfile
        shell: bash
        run: |
          cat <<EOF > /home/runner/crdSchemas/Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF

      - name: Publish web container
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: /home/runner/crdSchemas
          platforms: linux/amd64,linux/arm64
          file: /home/runner/crdSchemas/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.repo_owner.outputs.repo-owner }}/kubernetes-schemas:latest
            ghcr.io/${{ steps.repo_owner.outputs.repo-owner }}/kubernetes-schemas:${{ secrets.SCHEMAS_MAJOR_VERSION }}.${{ secrets.SCHEMAS_MINOR_VERSION }}.${{ secrets.SCHEMAS_PATCH_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source="${{ github.repositoryUrl }}"
            org.opencontainers.image.authors="Kilian Tyler <kiliantyler@users.noreply.github.com>"

      - name: Update Patch Version
        id: NEW_PATCH_VERSION
        shell: bash
        run: |
          echo "NEW_PATCH_VERSION=$((${{ secrets.SCHEMAS_PATCH_VERSION }}+1))" >> "${GITHUB_OUTPUT}"
          echo "New Patch Version |$((${{ secrets.SCHEMAS_PATCH_VERSION }}+1))|"

      - name: Update Minor version
        uses: hmanzur/actions-set-secret@377391a32b6d43a053d7847dde34ac6179ac9f55 # v2.0.0
        with:
          name: 'SCHEMAS_PATCH_VERSION'
          value: ${{ steps.NEW_PATCH_VERSION.outputs.NEW_PATCH_VERSION }}
          repository: kFlix-tv/k8s-kflix
          token: ${{ secrets.SECRET_PAT }}