---
- hosts:
    - master
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"
    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}
    - name: Packages | Ubuntu
      block:
        - name: Packages | Install required packages
          ansible.builtin.apt:
            name: "{{ ubuntu.packages | default([]) }}"
            state: present
            update_cache: true
        - name: Packages | Remove leaf packages
          ansible.builtin.apt:
            autoremove: true
      when: ansible_facts['distribution'] == 'Ubuntu'
    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          loop: "{{ public_ssh_keys | default([]) }}"
    - name: System Configuration (1)
      block:
        - name: System Configuration (1) | Disable ufw | Ubuntu
          ansible.builtin.systemd:
            service: ufw.service
            enabled: false
            masked: true
            state: stopped
          when: ansible_facts['distribution'] == 'Ubuntu'
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
    # - name: Install Duo SSH
    #   ansible.builtin.include_role:
    #     name: budimanjojo.duo_ssh
    #     public: true
    #   vars:
    #     duossh_duo_ikey: DICVZUA5058QW3GAF0W1
    #     duossh_duo_skey: naqjH8bHUxuTdhktpb6Xq6fSdoiPcL2krQSVhzs4
    #     duossh_duo_host: api-4913f54d.duosecurity.com
    #     duossh_duosecurity_version: duo_unix-2.0.0
    #     duossh_duosecurity_checksum: 0f90f748974ac6fe6271c372a5fb2172fae71dd9360fe87c7351a79bcee5ce06
    #     duossh_require_both: true
    #     duossh_duo_options:
    #       failmode: safe
    - name: Add Kilian User
      ansible.builtin.user:
        name: kilian
        group: admin
        shell: /bin/bash
    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: kilian
        state: present
        key: "ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBAAMAsfJHUtAKJ8V70nqayBrDEq3mH/fQ+cOX2Q2A+hvvujdhbHryKHz9MKzlNZZtt59VBO0Q+5uPygwH4wfGcEdxgGG7iNZGGYbRaMQqImEknF2koskAwWeYzTXoUSOUDpRk9u7yhrRlXax6TS+TrdzsqDdYX5jRWSq6pD9BLEfZt+fNg=="
    - name: Install Duo SSH
      ansible.builtin.include_role:
        name: kflixtv.duo_unix
        public: true
      vars:
        duo_config:
          ikey: DICVZUA5058QW3GAF0W1
          skey: naqjH8bHUxuTdhktpb6Xq6fSdoiPcL2krQSVhzs4
          host: api-4913f54d.duosecurity.com
          groups: "*,!htpc"
          pushinfo: yes
          autopush: yes
          prompts: 1
    - name: System Configuration (2)
      block:
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512
        - name: System Configuration (2) | Disable swap at runtime | Ubuntu
          ansible.builtin.command: swapoff -a
          when:
            - ansible_facts['distribution'] == 'Ubuntu'
            - ansible_swaptotal_mb > 0
        - name: System Configuration (2) | Disable swap at boot | Ubuntu
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop: ["none", "swap"]
          when: ansible_facts['distribution'] == 'Ubuntu'
      notify: Reboot

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
