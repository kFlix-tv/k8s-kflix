# yaml-language-server builtin
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "clustersecret"
  name: clustersecret-account
# yamllint disable-line rule:document-start
---
# yaml-language-server builtin
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustersecret-role-cluster
rules:
# Framework: knowing which other operators are running (i.e. peering).
- apiGroups: [clustersecret.io]
  resources: [clusterkopfpeerings]
  verbs: [list, watch, patch, get]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [list, get, patch]

# Framework: posting the events about the handlers progress/errors.
- apiGroups: [events.k8s.io]
  resources: [events]
  verbs: [create]
- apiGroups: [""]
  resources: [events]
  verbs: [create]

# Application: read-only access for watching cluster-wide.
- apiGroups: [clustersecret.io]
  resources: [clustersecrets]
  verbs: [list, watch, patch]

# Watch namespaces
- apiGroups: [""]
  resources: [namespaces, namespaces/status]
  verbs: [watch, list, get, patch]

# Handle secrets
- apiGroups: [""]
  resources: [secrets]
  verbs: [watch, list, get, patch, update, create, delete]
# yamllint disable-line rule:document-start
---
# yaml-language-server builtin
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: "clustersecret"
  name: clustersecret-role-namespaced
rules:

# Framework: knowing which other operators are running (i.e. peering).
- apiGroups: [clustersecret.io]
  resources: [kopfpeerings]
  verbs: [list, watch, patch, get]

# Framework: posting the events about the handlers progress/errors.
- apiGroups: [events.k8s.io]
  resources: [events]
  verbs: [create]
- apiGroups: [""]
  resources: [events]
  verbs: [create]

# Application: other resources it produces and manipulates.
# Here, we create secrets, but we do not delete them ever.
- apiGroups: [""]
  resources: [secrets]
  verbs: [create, update, patch]

# Application: get and patch clustersecrets for status patching
- apiGroups: [clustersecret.io]
  resources: [clustersecrets]
  verbs: [get, patch]
# yamllint disable-line rule:document-start
---
# yaml-language-server builtin
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustersecret-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustersecret-role-cluster
subjects:
- kind: ServiceAccount
  name: clustersecret-account
  namespace: "clustersecret"
# yamllint disable-line rule:document-start
---
# yaml-language-server builtin
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: "clustersecret"
  name: clustersecret-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: clustersecret-role-namespaced
subjects:
- kind: ServiceAccount
  name: clustersecret-account
